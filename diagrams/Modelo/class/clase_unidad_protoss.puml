@startuml
abstract UnidadProtoss{

-escudo:Escudo
+ocupar(terreno):bool
+consumirRecursosParaGenerarse(inventario)
+ejecutarDanio(danioTerrestre,danioAereo)
+regenerar()
+toData():objectNode
}

class Zealot{
-visibilidad:Visibilidad
-terreno:Terreno
+Zealot()
+actualizarUnidad(inventario)
+ocupar(terreno):bool
+generarse(edificio,inventario):Unidad
+ejecutarDanio(danioTerrestre,danioAereo)
+establecerVisibilidad(visibilidad)
+volverInvisible()
+volverVisible()
+toData():objectNode
}

class Scout{
+Scout()
+generarse(edificio,inventario):Unidad
+ocupar(terreno):bool
+actualizarUnidad(inventario)
}

class Dragon{
+Dragon()
+actualizarUnidad(inventario)
+ocupar(terreno):bool
+generarse(edificio,inventario):Unidad
}

UnidadProtoss <|-- Zealot
UnidadProtoss <|-left- Scout
UnidadProtoss <|-- Dragon
Zealot --> Visibilidad
Visibilidad <|.. Visible
Visibilidad <|.. Invisible

interface Visibilidad{
+visibilizarUnidad(unidad,cantidadKills:int)
+ejecutarDanio(danioTerrestre,vida,escudo,unidad)
}
class Visible{
+toData():objectNode

}
class Invisible{
+toData():objectNode

}
@enduml